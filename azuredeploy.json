{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "baseResourceName": {
      "type": "string",
      "minLength": 1,
      "defaultValue" : "petrobras-teams-apps-multiqna",
      "metadata": {
        "description": "The base name to use for the resources that will be provisioned."
      }
    },
    
    "botClientId": {
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "defaultValue" : "",
      "metadata": {
        "description": "The client ID of the bot Azure AD app, e.g., 123e4567-e89b-12d3-a456-426655440000."
      }
    },
    "botClientSecret": {
      "type": "securestring",
      "minLength": 1,
      "defaultValue" : "",
      "metadata": {
        "description": "The client secret of the bot Azure AD app."
      }
    },

    "appDisplayName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "petrobras-teams-apps-multiqna",
      "metadata": {
        "description": "The app (and bot) display name."
      }
    },
    "appDescription": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Um bot de perguntas frequentes que responde a perguntas e conecta vocÃª a especialistas.",
      "metadata": {
          "description": "The app (and bot) description."
      }
    },
    "appIconUrl": {
        "type": "string",
        "minLength": 1,
        "defaultValue": "https://raw.githubusercontent.com/OfficeDev/microsoft-teams-faqplusplus-app/master/Manifest/color.png",
        "metadata": {
            "description": "The link to the icon for the app. It must resolve to a PNG file."
        }
    },
    
    "qnaMakerSku": {
      "type": "string",
      "allowedValues": [
        "F0 (3 managed documents per month, 3 transactions per second, 100 transactions per minute, 50K transactions per month)",
        "S0 ($10 per month for unlimited documents, 3 transactions per second, 100 transactions per minute)"
      ],
      "defaultValue": "S0 ($10 per month for unlimited documents, 3 transactions per second, 100 transactions per minute)",
      "metadata": {
        "description": "The pricing tier for the QnAMaker service."
      }
    },

    "luisAuthoringSku": {
      "type": "string",
      "allowedValues": [
        "F0 (5 Calls per second, 1M Calls per month)"
      ],
      "defaultValue": "F0 (5 Calls per second, 1M Calls per month)",
      "metadata": {
        "description": "The pricing tier for the LUIS service authoring sku."
      }
    },

    "luisPredictSku": {
      "type": "string",
      "allowedValues": [
        "F0 (5 Calls per second, 10K Calls per month)",
        "S0 (50 Calls per second)"
      ],
      "defaultValue": "F0 (5 Calls per second, 10K Calls per month)",
      "metadata": {
        "description": "The pricing tier for the LUIS service predict sku."
      }
    },
    
    "qnaMakerTAR": {
      "defaultValue": "petrobras-teams-apps-multiqna-tar",
      "type": "string",
      "metadata": {
        "description": "QnAMaker service name for TAR."
      }
    },

    "qnaMakerMain": {
      "defaultValue": "petrobras-teams-apps-multiqna-main",
      "type": "string",
      "metadata": {
        "description": "QnAMaker service name for Main."
      }
    },

    "sku": {
      "type": "string",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "planSize": {
      "type": "string",
      "allowedValues": [
        "1",
        "2",
        "3"
      ],
      "defaultValue": "1",
      "metadata": {
        "description": "The size of the hosting plan (small, medium, or large)."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all Resources."
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "minLength": 1,
      "maxLength": 36,
      "metadata": {
        "description": "The ID of the tenant to which the app will be deployed."
      }
    },

    "searchServiceSku": {
      "type": "string",
      "allowedValues": [
        "F (3 indexes)",
        "B (15 indexes)",
        "S (50 indexes)",
        "S2 (200 indexes)"
      ],
      "defaultValue": "B (15 indexes)",
      "metadata": {
        "description": "The pricing tier for the Azure Search service."
      }
    }
  },
  "variables": {
    "botName": "[parameters('baseResourceName')]",
    "botAppName": "[parameters('baseResourceName')]",
    "botAppDomain": "[concat(variables('botAppName'), '.azurewebsites.net')]",
    "botAppUrl": "[concat('https://', variables('botAppDomain'))]",
    "hostingPlanName": "[parameters('baseResourceName')]",
    "storageAccountName": "[uniquestring(concat(resourceGroup().id, parameters('baseResourceName')))]",
    "botAppInsightsName": "[concat(parameters('baseResourceName'), '-appinsights')]",

    "luisLocation": "westus",
    "qnaMakerLocation": "westus",

    "luisAppName": "[concat(parameters('baseResourceName'), '-luis')]",
    
    "luisAuthoringSkuValue": "[substring(parameters('luisAuthoringSku'), 0, 2)]",
    "luisPredictSkuValue": "[substring(parameters('luisPredictSku'), 0, 2)]",

    "qnaMakerTARAccountName": "[parameters('qnaMakerTAR')]",
    "qnaMakerTAR": "[parameters('qnaMakerTAR')]",
    "qnaMakerTARAppServiceName": "[concat(parameters('qnaMakerTAR'), '-qnamaker')]",
    "qnaMakerTARAppInsightsName": "[concat(parameters('qnaMakerTAR'), '-qnamaker-appinsights')]",

    "qnaMakerMainAccountName": "[parameters('qnaMakerMain')]",
    "qnaMakerMain": "[parameters('qnaMakerMain')]",
    "qnaMakerMainAppServiceName": "[concat(parameters('qnaMakerMain'), '-qnamaker')]",
    "qnaMakerMainAppInsightsName": "[concat(parameters('qnaMakerMain'), '-qnamaker-appinsights')]",

    "qnaMakerSkuValue": "[substring(parameters('qnaMakerSku'), 0, 2)]",
    
    "azureSearchName": "[concat(parameters('baseResourceName'), '-search')]",
    "azureSearchSkus": { "F ": "free", "B ": "basic", "S ": "standard", "S2": "standard2" },
    "azureSearchSkuValue": "[variables('azureSearchSkus')[toUpper(substring(parameters('searchServiceSku'), 0, 2))]]",
    "sharedSkus": [ "Free", "Shared" ],
    "isSharedPlan": "[contains(variables('sharedSkus'), parameters('sku'))]",
    "skuFamily": "[if(equals(parameters('sku'), 'Shared'), 'D', take(parameters('sku'), 1))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2018-02-01",
      "location": "[parameters('location')]",
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "hostingEnvironment": "",
        "numberOfWorkers": 1
      },
      "sku": {
        "name": "[if(variables('isSharedPlan'), concat(variables('skuFamily'),'1'), concat(variables('skuFamily'),parameters('planSize')))]",
        "tier": "[parameters('sku')]",
        "size": "[concat(variables('skuFamily'), parameters('planSize'))]",
        "family": "[variables('skuFamily')]",
        "capacity": 0
      }
    },
    {
      "apiVersion": "2016-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[variables('botAppName')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "properties": {
        "name": "[variables('botAppName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "enabled": true,
        "reserved": false,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "SITE_ROLE",
              "value": "bot"
            },
            {
              "name": "MicrosoftAppId",
              "value": "[parameters('botClientId')]"
            },
            {
              "name": "MicrosoftAppPassword",
              "value": "[parameters('botClientSecret')]"
            },
            {
              "name": "StorageConnectionString",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1)]"
            },

            {
              "name": "qnaMakerSettings",
              "value": ""
            },

            {
              "name": "LuisAppId",
              "value": ""
            },

            {
              "name": "LuisAPIKey",
              "value": ""
            },

            {
              "name": "LuisEndPointURL",
              "value": ""
            },

            {
              "name": "TenantId",
              "value": "[parameters('tenantId')]"
            },
            {
              "name": "AppBaseUri",
              "value": "[concat('https://', variables('botAppDomain'))]"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components/', variables('botAppInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "ScoreThreshold",
              "value": "0.5"
            },
            {
              "name": "SearchServiceName",
              "value": "[variables('azureSearchName')]"
            },
            {
              "name": "SearchServiceAdminApiKey",
              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]"
            },
            {
              "name": "SearchServiceQueryApiKey",
              "value": "[listQueryKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').value[0].key]"
            },
            {
              "name": "AccessCacheExpiryInDays",
              "value": "5"
            },
            {
              "name": "SearchIndexingIntervalInMinutes",
              "value": "10"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Web/sites', variables('qnaMakerTARAppServiceName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts/', variables('qnaMakerTARAccountName'))]",
        "[resourceId('Microsoft.Search/searchServices/', variables('azureSearchName'))]",
        "[resourceId('Microsoft.Insights/components/', variables('botAppInsightsName'))]"
      ],
      "resources": []
    },
    {
      "apiVersion": "2015-05-01",
      "name": "[variables('botAppInsightsName')]",
      "type": "Microsoft.Insights/components",
      "location": "[parameters('location')]",
      "tags": {
        "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('botAppName'))]": "Resource"
      },
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "apiVersion": "2018-07-12",
      "name": "[variables('botName')]",
      "type": "Microsoft.BotService/botServices",
      "location": "global",
      "sku": {
        "name": "F0"
      },
      "kind": "sdk",
      "properties": {
        "displayName": "[parameters('appDisplayName')]",
        "description": "[parameters('appDescription')]",
        "iconUrl": "[parameters('appIconUrl')]",
        "msaAppId": "[parameters('botClientId')]",
        "endpoint": "[concat(variables('botAppUrl'), '/api/messages')]",
        "developerAppInsightKey": "[reference(resourceId('Microsoft.Insights/components', variables('botAppInsightsName')), '2015-05-01').InstrumentationKey]"
      },
      "resources": [
        {
          "name": "[concat(variables('botName'), '/MsTeamsChannel')]",
          "type": "Microsoft.BotService/botServices/channels",
          "apiVersion": "2018-07-12",
          "location": "global",
          "sku": {
            "name": "F0"
          },
          "properties": {
            "channelName": "MsTeamsChannel",
            "location": "global",
            "properties": {
              "isEnabled": true
            }
          },
          "dependsOn": [
            "[concat('Microsoft.BotService/botServices/', variables('botName'))]"
          ]
        }
      ]
    },
    {
      "name": "[variables('azureSearchName')]",
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2015-08-19",
      "location": "[parameters('location')]",
      "tags": {
        "isqnamaker": "true"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default"
      },
      "sku": {
        "name": "[toLower(variables('azureSearchSkuValue'))]"
      }
    },
    
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "kind": "QnAMaker",
      "name": "[variables('qnaMakerTARAccountName')]",
      "apiVersion": "2017-04-18",
      "location": "[variables('qnaMakerLocation')]",
      "sku": {
        "name": "[variables('qnaMakerSkuValue')]"
      },
      "properties": {
        "apiProperties": {
          "qnaRuntimeEndpoint": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('qnaMakerTARAppServiceName'))).hostNames[0])]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('qnaMakerTARAppServiceName'))]",
        "[resourceId('Microsoft.Search/searchServices/', variables('azureSearchName'))]",
        "[resourceId('microsoft.insights/components/', variables('qnaMakerTARAppInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[variables('qnaMakerTARAppServiceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabled": true,
        "siteConfig": {
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          }
        },
        "name": "[variables('qnaMakerTARAppServiceName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "hostingEnvironment": ""
      },
      "tags": {
        "isqnamaker": "true",
        "[concat('hidden-related:', '/subscriptions/', subscription().id,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty"
      },
      "dependsOn": [ 
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      ],
      "resources": [
        {
          "name": "[variables('qnaMakerTARAppInsightsName')]",
          "type": "microsoft.insights/components",
          "kind": "web",
          "apiVersion": "2015-05-01",
          "location": "[parameters('location')]",
          "tags": {
            "[concat('hidden-link:', resourceId('Microsoft.Web/sites/', variables('qnaMakerTARAppServiceName')))]": "Resource"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('qnaMakerTARAppServiceName'))]"
          ],
          "properties": {
            "ApplicationId": "[variables('qnaMakerTARAppServiceName')]"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('qnaMakerTARAppServiceName'))]",
            "[resourceId('Microsoft.Search/searchServices/', variables('azureSearchName'))]"
          ],
          "properties": {
            "AzureSearchName": "[variables('azureSearchName')]",
            "AzureSearchAdminKey": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]",
            "UserAppInsightsKey": "[reference(resourceId('Microsoft.Insights/components/', variables('qnaMakerTARAppInsightsName')), '2015-05-01').InstrumentationKey]",
            "UserAppInsightsName": "[variables('qnaMakerTARAppInsightsName')]",
            "UserAppInsightsAppId": "[reference(resourceId('Microsoft.Insights/components/', variables('qnaMakerTARAppInsightsName')), '2015-05-01').AppId]",
            "PrimaryEndpointKey": "[concat(variables('qnaMakerTARAppServiceName'), '-PrimaryEndpointKey')]",
            "SecondaryEndpointKey": "[concat(variables('qnaMakerTARAppServiceName'), '-SecondaryEndpointKey')]",
            "DefaultAnswer": "Nenhuma resposta encontrada para a sua pergunta.",
            "QNAMAKER_EXTENSION_VERSION": "latest"
          }
        }
      ]
    },

    {
      "type": "Microsoft.CognitiveServices/accounts",
      "kind": "QnAMaker",
      "name": "[variables('qnaMakerMainAccountName')]",
      "apiVersion": "2017-04-18",
      "location": "[variables('qnaMakerLocation')]",
      "sku": {
        "name": "[variables('qnaMakerSkuValue')]"
      },
      "properties": {
        "apiProperties": {
          "qnaRuntimeEndpoint": "[concat('https://', reference(resourceId('Microsoft.Web/sites', variables('qnaMakerMainAppServiceName'))).hostNames[0])]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/Sites', variables('qnaMakerMainAppServiceName'))]",
        "[resourceId('Microsoft.Search/searchServices/', variables('azureSearchName'))]",
        "[resourceId('microsoft.insights/components/', variables('qnaMakerMainAppInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2016-08-01",
      "name": "[variables('qnaMakerMainAppServiceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabled": true,
        "siteConfig": {
          "cors": {
            "allowedOrigins": [
              "*"
            ]
          }
        },
        "name": "[variables('qnaMakerMainAppServiceName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "hostingEnvironment": ""
      },
      "tags": {
        "isqnamaker": "true",
        "[concat('hidden-related:', '/subscriptions/', subscription().id,'/resourcegroups/', resourceGroup().name, '/providers/Microsoft.Web/serverfarms/', variables('hostingPlanName'))]": "empty"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
      ],
      "resources": [
        {
          "name": "[variables('qnaMakerMainAppInsightsName')]",
          "type": "microsoft.insights/components",
          "kind": "web",
          "apiVersion": "2015-05-01",
          "location": "[parameters('location')]",
          "tags": {
            "[concat('hidden-link:', resourceId('Microsoft.Web/sites/', variables('qnaMakerMainAppServiceName')))]": "Resource"
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('qnaMakerMainAppServiceName'))]"
          ],
          "properties": {
            "ApplicationId": "[variables('qnaMakerMainAppServiceName')]"
          }
        },
        {
          "apiVersion": "2015-08-01",
          "name": "appsettings",
          "type": "config",
          "dependsOn": [
            "[resourceId('Microsoft.Web/Sites', variables('qnaMakerMainAppServiceName'))]",
            "[resourceId('Microsoft.Search/searchServices/', variables('azureSearchName'))]"
          ],
          "properties": {
            "AzureSearchName": "[variables('azureSearchName')]",
            "AzureSearchAdminKey": "[listAdminKeys(resourceId('Microsoft.Search/searchServices/', variables('azureSearchName')), '2015-08-19').primaryKey]",
            "UserAppInsightsKey": "[reference(resourceId('Microsoft.Insights/components/', variables('qnaMakerMainAppInsightsName')), '2015-05-01').InstrumentationKey]",
            "UserAppInsightsName": "[variables('qnaMakerMainAppInsightsName')]",
            "UserAppInsightsAppId": "[reference(resourceId('Microsoft.Insights/components/', variables('qnaMakerMainAppInsightsName')), '2015-05-01').AppId]",
            "PrimaryEndpointKey": "[concat(variables('qnaMakerMainAppServiceName'), '-PrimaryEndpointKey')]",
            "SecondaryEndpointKey": "[concat(variables('qnaMakerMainAppServiceName'), '-SecondaryEndpointKey')]",
            "DefaultAnswer": "Nenhuma resposta encontrada para a sua pergunta.",
            "QNAMAKER_EXTENSION_VERSION": "latest"
          }
        }
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2016-02-01-preview",
      "name": "[variables('luisAppName')]",
      "location": "[variables('luisLocation')]",
      "kind": "LUIS.Authoring",
      "sku": {
        "name": "[variables('luisAuthoringSkuValue')]"
      },
      "properties": {
          "customSubDomainName": "[variables('luisAppName')]"
      },
      "dependsOn": [
      ]
    }

  ]
}